- if @category_id.present?
  - content_for :meta_title, t('meta.sub_category_title', :sub_category => @categories.first.name)
  - content_for :meta_keywords, t('meta.sub_category_keywords', :sub_category => @categories.first.name)
  - content_for :meta_description, t('meta.sub_category_description', :sub_category => @categories.first.name)
  - content_for :seo_header, t('meta.sub_category_header', :sub_category => @categories.first.name)
- else
  = set_meta(@categories.first.try(:top_category_name))
- steps = [link_to(t(@categories.first.top_category_name), category_url(@categories.first.top_category))]

- if @category_id.present?
  - steps << link_to(@categories.first.name, category_sub_category_url(@categories.first.top_category, @categories.first))
-  if params[:brand].present?
  - steps << link_to(@item_models.first.brand.name, category_sub_category_with_brand_url(@categories.first.top_category, @categories.first))
- if params[:sub_category].present?
  - steps << link_to(@item_models.first.sub_category.name, category_sub_category_with_sub_url(@categories.first.top_category, @categories.first, @item_models.first.sub_category))

= bread_crumbs(steps)
.separator_header

.category-page.search_wrapper.advanced_search_wrapper
  .brows_category
    .brows_lable
      .bl_style= t(@categories.first.try(:top_category_name))
      .bl_image
    %ul.main_category
      - @categories.each do |category|
        %li.mcl_link
          = link_to category.name, "#{@current_request_uri}&category=#{category.to_param}"

    .genders
      .brows_lable
        .bl_style= t("genders")
        .bl_image
      .content
        %ul.main_category
          - @gender_counts.each do |count_value|
            %li.mcl_link
              %a.mcl_link_left{ :href => "#{@current_request_uri}&gender=#{count_value.gender_id}" }= count_value.try(:type_name) rescue count_value.try(:gender_name)
              %a.mcl_link_right{ :href => "#{@current_request_uri}&gender=#{count_value.gender_id}" }= count_value.try(:count_value) rescue count_value.try(:value)

    - unless @running_root_request
      .sub_categories
        .brows_lable
          .bl_style= t("sub_categories")
          .bl_image
        .content
          %ul.main_category
            - @sub_categories_counts.each do |count_value|
              %li.mcl_link
                %a.mcl_link_left{ :href => "#{@current_request_uri}&sub_category=#{count_value.sub_category_id}" }= count_value.try(:type_name) rescue count_value.try(:sub_category_name)
                %a.mcl_link_right{ :href => "#{@current_request_uri}&sub_category=#{count_value.sub_category_id}" }= count_value.try(:count_value) rescue count_value.try(:value)

      .price_filter_container{ data: { current_uri: @current_request_uri }}
        .brows_lable
          .bl_style= t("prices")
          .bl_image
        .content
          %ul.main_category
            #max_price.invisible= (1000*@exchange_rate).to_i
            #currency.invisible= @currency
            - min_price = params[:price_range].try(:split, '-').try(:first).to_i
            - max_price = params[:price_range].try(:split, '-').try(:last) || (1000*@exchange_rate).to_i
            %span#price_range_label
              = "#{min_price} #@currency - #{max_price} #@currency"
            .price_filter{ data: { current_min: min_price, current_max: max_price } }
              #price_slider
              = link_to "eggs", "", :id => "price_filter", :class => "invisible"

      .colors
        .brows_lable
          .bl_style= t("colors")
          .bl_image
        .content
          %ul.main_category.colors
            - @color_counts.each do |count_value|
              .image_div
                = link_to "#{@current_request_uri}&color=#{count_value.type_name}" do
                  %img{ src: count_value.swatch_url}
      .sizes
        .brows_lable
          .bl_style= t("sizes")
          .bl_image
        .content
          %ul.main_category
            %table.size-table
              - @size_counts.in_groups_of(5).each do |count_values|
                %tr
                  - count_values.each do |count_value|
                    - if count_value.present?
                      %td
                        %a{ :href => "#{@current_request_uri}&size=#{count_value.size_value}" }= count_value.size_value

  = render @item_models, locals: { params: params }
  = paginate @item_models, :window => 6
  .delimiter
  .separator_header
  %h4= t 'brands_in_category'
  .category_logos_block
    - @brands.in_groups_of(3).each do |brand_group|
      - brand_group.each do |brand|
        - next if brand.blank? || brand.logo_url.blank?
        %a.category_logos{:href => brand_path(brand)}
          = image_tag brand.logo_url, alt: brand.name, title: brand.name
        .cl_delimeter
  .brand-pager= paginate @brands, :window => 6, param_name: 'brand_page'